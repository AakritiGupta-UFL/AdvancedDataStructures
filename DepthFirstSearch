import java.util.Iterator;
import java.util.LinkedList;

public class DepthFirstSearch {
    int vertex;
    LinkedList<Integer> list[];

    DepthFirstSearch(int vertex)
    {
        this.vertex=vertex;
        list=new LinkedList[vertex];
        for(int i=0;i<vertex;i++)
        {
            list[i]=new LinkedList();
        }
    }

    public void addEdges(int source,int destination)
    {
        list[source].addFirst(destination);
        list[destination].addFirst(source);
    }

    public void DFS(int v)
    {
        boolean visited[]=new boolean[vertex];
        search(v,visited);
    }

    public void search(int v,boolean visited[])
    {
      visited[v]=true;
      System.out.println(v);
        Iterator<Integer> i=list[v].listIterator();
        while(i.hasNext())
        {
            int n=i.next();
            if(!visited[n])
            search(n,visited);
        }
    }

    public static void main(String[]args)
    {
        DepthFirstSearch graph=new DepthFirstSearch(5);
        graph.addEdges(0,1);
        graph.addEdges(0,2);
        graph.addEdges(1,2);
        graph.addEdges(2,0);
        graph.addEdges(2,3);
        graph.addEdges(3,3);

        graph.DFS(2);

    }
}
